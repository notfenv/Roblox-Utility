"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[722],{52476:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a Welder, used for welding instances to a root instance.","params":[{"name":"container","desc":"","lua_type":"Model?"},{"name":"root","desc":"","lua_type":"BasePart?"}],"returns":[{"desc":"","lua_type":"Welder"}],"function_type":"static","source":{"line":32,"path":"src/Welder/init.lua"}},{"name":"Bind","desc":"Prepares the `container` for welding to `weldTo`.\\n\\n:::caution\\nRun this before calling `Welder:Apply()\\n:::","params":[{"name":"container","desc":"","lua_type":"Model"},{"name":"weldTo","desc":"","lua_type":"BasePart"}],"returns":[],"function_type":"method","source":{"line":54,"path":"src/Welder/init.lua"}},{"name":"Apply","desc":"Welds the model to the primary part, using a `Motor6D` if `applyAsMotor` is true.\\n\\n```lua\\nlocal welder = Welder.new()\\nwelder:Bind(tool, tool.Handle)\\nwelder:Apply(true) -- All joints will be a Motor6D\\n```","params":[{"name":"applyAsMotor","desc":"","lua_type":"boolean | false"}],"returns":[],"function_type":"method","source":{"line":93,"path":"src/Welder/init.lua"}},{"name":"Break","desc":"Destroys the welds.","params":[],"returns":[],"function_type":"method","source":{"line":131,"path":"src/Welder/init.lua"}},{"name":"Destroy","desc":"Destroys the Welder, and breaking the joints if `breakJoints` is true.","params":[{"name":"breakJoints","desc":"","lua_type":"boolean | false"}],"returns":[],"function_type":"method","source":{"line":147,"path":"src/Welder/init.lua"}}],"properties":[],"types":[],"name":"Welder","desc":"A Welder is useful for welding objects together automatically.\\n\\nAn example Welder may look like this:\\n\\n```lua\\nlocal Welder = require(path.to.Welder)\\nlocal Model = workspace.Model\\nlocal welder = Welder.new()\\nwelder:Bind(Model, Model.PrimaryPart) -- Make data so the Welder knows what to weld, in this case we\'re welding all of the Model\'s children to it\'s PrimaryPart\\nwelder:Apply(true) -- Applying the welds as a Motor6D, this should create a Welds folder in the PrimaryPart with the welds in it\\ntask.wait(5)\\nwelder:Destroy(true) -- Destroy the welder while breaking the welds along with it\\n```","source":{"line":23,"path":"src/Welder/init.lua"}}')}}]);