"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[619],{421:e=>{e.exports=JSON.parse('{"functions":[{"name":"frameDelta","desc":"Calculates the frame delta given the time elapsed (t) and delta time (dt)","params":[{"name":"t","desc":"","lua_type":"number"},{"name":"dt","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"static","source":{"line":24,"path":"src/Math/init.lua"}},{"name":"round","desc":"Rounds a value to the nearest multiple of `roundingValue`","params":[{"name":"value","desc":"","lua_type":"number"},{"name":"roundingValue","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"static","source":{"line":34,"path":"src/Math/init.lua"}},{"name":"smoothLerp","desc":"Smoothly interpolates between two numbers (from and to) using a smooth curve.","params":[{"name":"from","desc":"","lua_type":"number"},{"name":"to","desc":"","lua_type":"number"},{"name":"t","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"static","source":{"line":53,"path":"src/Math/init.lua"}},{"name":"slerpVector","desc":"Interpolates between two vectors (`start` and `to`) using spherical linear interpolation.","params":[{"name":"start","desc":"","lua_type":"Vector3"},{"name":"to","desc":"","lua_type":"Vector3"},{"name":"t","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Vector3"}],"function_type":"static","source":{"line":65,"path":"src/Math/init.lua"}},{"name":"safeLerp","desc":"Safely interpolates between two numbers or colors (`from` and `to`) using linear interpolation.","params":[{"name":"from","desc":"","lua_type":"number|Color3"},{"name":"to","desc":"","lua_type":"number|Color3"},{"name":"t","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number|Color3"}],"function_type":"static","source":{"line":79,"path":"src/Math/init.lua"}},{"name":"randomizeVector","desc":"Randomly generates a vector based on a direction (`to`) and a randomizer (`random`).","params":[{"name":"random","desc":"","lua_type":"Random"},{"name":"to","desc":"","lua_type":"Vector3"},{"name":"t","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Vector3"}],"function_type":"static","source":{"line":99,"path":"src/Math/init.lua"}},{"name":"interpolateCFrame","desc":"Interpolates between two CFrame objects (`start` and `to`) using linear interpolation.","params":[{"name":"start","desc":"","lua_type":"CFrame"},{"name":"to","desc":"","lua_type":"CFrame"},{"name":"t","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"CFrame"}],"function_type":"static","source":{"line":113,"path":"src/Math/init.lua"}},{"name":"lerpColor3","desc":"Interpolates between two colors (`from` and `to`) using linear interpolation.","params":[{"name":"from","desc":"","lua_type":"Color3"},{"name":"to","desc":"","lua_type":"Color3"},{"name":"t","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Color3"}],"function_type":"static","source":{"line":124,"path":"src/Math/init.lua"}},{"name":"lerp","desc":"Interpolates between two numbers (`from` and `to`) using linear interpolation.","params":[{"name":"from","desc":"","lua_type":"number"},{"name":"to","desc":"","lua_type":"number"},{"name":"t","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"static","source":{"line":139,"path":"src/Math/init.lua"}},{"name":"horizontalAngle","desc":"Calculates the horizontal angle of a given vector (`dir`) in degrees.","params":[{"name":"dir","desc":"","lua_type":"Vector3"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"static","source":{"line":148,"path":"src/Math/init.lua"}},{"name":"percentBetween","desc":"Calculates the percentage between two values (`min` and `max`) relative to a third value (`oldMax`)","params":[{"name":"min","desc":"","lua_type":"number"},{"name":"max","desc":"","lua_type":"number"},{"name":"oldMax","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"static","source":{"line":159,"path":"src/Math/init.lua"}},{"name":"flat","desc":"Returns a copy of `vec` with its `Y` component set to 0.","params":[{"name":"vec","desc":"","lua_type":"Vector3"}],"returns":[{"desc":"","lua_type":"Vector3"}],"function_type":"static","source":{"line":171,"path":"src/Math/init.lua"}},{"name":"gamma","desc":"Applies a gamma correction to a value (`value`) relative to a maximum value (`absmax`) and a gamma value (`gamma`).","params":[{"name":"value","desc":"","lua_type":"number"},{"name":"absmax","desc":"","lua_type":"number"},{"name":"gamma","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":181,"path":"src/Math/init.lua"}},{"name":"smoothDamp","desc":"Gradually changes a value towards a desired goal over time.","params":[{"name":"current","desc":"","lua_type":"number|Vector3|CFrame|Vector2"},{"name":"target","desc":"","lua_type":"number|Vector3|CFrame|Vector2"},{"name":"currentVelocity","desc":"","lua_type":"number"},{"name":"smoothTime","desc":"","lua_type":"number"},{"name":"maxSpeed","desc":"","lua_type":"number"},{"name":"deltaTime","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number|Vector3|CFrame|Vector2"}],"function_type":"static","source":{"line":202,"path":"src/Math/init.lua"}},{"name":"nextPowerOfTwo","desc":"Returns the smallest power of two that is greater than or equal to `value`.","params":[{"name":"value","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"static","source":{"line":242,"path":"src/Math/init.lua"}},{"name":"closestPowerOfTwo","desc":"Returns the closest power of two to value.","params":[{"name":"value","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"static","source":{"line":257,"path":"src/Math/init.lua"}},{"name":"isPowerOfTwo","desc":"Returns if the value is a power of two.","params":[{"name":"value","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":272,"path":"src/Math/init.lua"}},{"name":"deltaAngle","desc":"Calculates the shortest difference between two angles.","params":[{"name":"current","desc":"","lua_type":"number"},{"name":"target","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"static","source":{"line":282,"path":"src/Math/init.lua"}},{"name":"pingPong","desc":"PingPongs the value `t`, so that it is never larger than `length` and never smaller than 0.","params":[{"name":"t","desc":"","lua_type":"number"},{"name":"length","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"static","source":{"line":296,"path":"src/Math/init.lua"}},{"name":"inverseLerp","desc":"Calculates the inverse interpolation of two values.","params":[{"name":"a","desc":"","lua_type":"number"},{"name":"b","desc":"","lua_type":"number"},{"name":"value","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":307,"path":"src/Math/init.lua"}},{"name":"smoothDampAngle","desc":"Smoothly changes an angle in degrees towards a desired angle over time.\\nReturns the new angle after the change.","params":[{"name":"current","desc":"","lua_type":"number"},{"name":"target","desc":"","lua_type":"number"},{"name":"currentVelocity","desc":"","lua_type":"number"},{"name":"smoothTime","desc":"","lua_type":"number"},{"name":"maxSpeed","desc":"","lua_type":"number?"},{"name":"deltaTime","desc":"","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"static","source":{"line":326,"path":"src/Math/init.lua"}},{"name":"approximately","desc":"Compares two floating point values if they are similar\\n\\nIf a or b is zero, compare that the other is less or equal to epsilon.\\nIf neither a or b are 0, then find an epsilon that is good for\\ncomparing numbers at the maximum magnitude of a and b.\\nFloating points have about 7 significant digits, so\\n1.000001 can be represented while 1.0000001 is rounded to zero,\\nthus we could use an epsilon of 0.000001 for comparing values close to 1.\\nWe multiply this epsilon by the biggest magnitude of a and b..","params":[{"name":"a","desc":"","lua_type":"number"},{"name":"b","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":354,"path":"src/Math/init.lua"}}],"properties":[{"name":"epsilon","desc":"","lua_type":"number","source":{"line":16,"path":"src/Math/init.lua"}}],"types":[],"name":"Math","desc":"Math utilities.\\nUsed in project East.","source":{"line":10,"path":"src/Math/init.lua"}}')}}]);